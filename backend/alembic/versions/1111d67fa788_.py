"""empty message

Revision ID: 1111d67fa788
Revises: 
Create Date: 2021-01-06 17:37:21.786178

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1111d67fa788'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('street', sa.String(), nullable=False),
    sa.Column('line_2', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('zipcode', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_address_id'), 'address', ['id'], unique=True)
    op.create_table('product',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_description'), 'product', ['description'], unique=False)
    op.create_index(op.f('ix_product_id'), 'product', ['id'], unique=True)
    op.create_index(op.f('ix_product_title'), 'product', ['title'], unique=False)
    op.create_table('productprice',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_price', sa.Float(), nullable=True),
    sa.Column('discounted_price', sa.Float(), nullable=True),
    sa.Column('shipping_charges', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_productprice_id'), 'productprice', ['id'], unique=True)
    op.create_table('user',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=True)
    op.create_table('buyer',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_buyer_id'), 'buyer', ['id'], unique=True)
    op.create_table('productmeta',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('product_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id', 'product_id')
    )
    op.create_index(op.f('ix_productmeta_id'), 'productmeta', ['id'], unique=True)
    op.create_index(op.f('ix_productmeta_name'), 'productmeta', ['name'], unique=False)
    op.create_index(op.f('ix_productmeta_value'), 'productmeta', ['value'], unique=False)
    op.create_table('seller',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_seller_id'), 'seller', ['id'], unique=True)
    op.create_table('cart',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('buyer_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['buyer_id'], ['buyer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cart_id'), 'cart', ['id'], unique=True)
    op.create_table('store',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('buisness_name', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('seller_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('is_store_pickup', sa.Boolean(), nullable=False),
    sa.Column('is_same_home_delivery', sa.Boolean(), nullable=False),
    sa.Column('extra_delivery_charge', sa.Float(), nullable=True),
    sa.Column('minimum_order_amount', sa.Float(), nullable=True),
    sa.Column('is_shipping', sa.Boolean(), nullable=False),
    sa.Column('address_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['seller.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_store_id'), 'store', ['id'], unique=True)
    op.create_table('cartproduct',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cart_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('product_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['cart_id'], ['cart.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id', 'cart_id', 'product_id')
    )
    op.create_index(op.f('ix_cartproduct_id'), 'cartproduct', ['id'], unique=True)
    op.create_table('prdstore',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('store_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('product_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('price_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['price_id'], ['productprice.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['store.id'], ),
    sa.PrimaryKeyConstraint('id', 'store_id', 'product_id', 'price_id')
    )
    op.create_index(op.f('ix_prdstore_id'), 'prdstore', ['id'], unique=True)
    op.create_table('storemanager',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('store_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['store_id'], ['store.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('store_id')
    )
    op.create_index(op.f('ix_storemanager_id'), 'storemanager', ['id'], unique=True)
    op.create_table('productcoupon',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('prd_seller_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('coupon_code', sa.String(), nullable=True),
    sa.Column('expiry_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('discount_type', sa.Enum('price', 'quantity', name='coupontype'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['prd_seller_id'], ['prdstore.id'], ),
    sa.PrimaryKeyConstraint('id', 'prd_seller_id'),
    sa.UniqueConstraint('coupon_code')
    )
    op.create_index(op.f('ix_productcoupon_id'), 'productcoupon', ['id'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_productcoupon_id'), table_name='productcoupon')
    op.drop_table('productcoupon')
    op.drop_index(op.f('ix_storemanager_id'), table_name='storemanager')
    op.drop_table('storemanager')
    op.drop_index(op.f('ix_prdstore_id'), table_name='prdstore')
    op.drop_table('prdstore')
    op.drop_index(op.f('ix_cartproduct_id'), table_name='cartproduct')
    op.drop_table('cartproduct')
    op.drop_index(op.f('ix_store_id'), table_name='store')
    op.drop_table('store')
    op.drop_index(op.f('ix_cart_id'), table_name='cart')
    op.drop_table('cart')
    op.drop_index(op.f('ix_seller_id'), table_name='seller')
    op.drop_table('seller')
    op.drop_index(op.f('ix_productmeta_value'), table_name='productmeta')
    op.drop_index(op.f('ix_productmeta_name'), table_name='productmeta')
    op.drop_index(op.f('ix_productmeta_id'), table_name='productmeta')
    op.drop_table('productmeta')
    op.drop_index(op.f('ix_buyer_id'), table_name='buyer')
    op.drop_table('buyer')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_productprice_id'), table_name='productprice')
    op.drop_table('productprice')
    op.drop_index(op.f('ix_product_title'), table_name='product')
    op.drop_index(op.f('ix_product_id'), table_name='product')
    op.drop_index(op.f('ix_product_description'), table_name='product')
    op.drop_table('product')
    op.drop_index(op.f('ix_address_id'), table_name='address')
    op.drop_table('address')
    # ### end Alembic commands ###
